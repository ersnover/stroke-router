{"version":3,"sources":["serviceWorker.js","App.js","env.js","utils/authenticate.js","components/login.js","store/actions/actionCreators.js","components/assessment-components/tpa/AgeInRange.js","components/assessment-components/tpa/LastKnownWell.js","components/assessment-components/tpa/RecentSurgery.js","components/assessment-components/tpa/Pregnancy.js","components/assessment-components/tpa/Anticoagulants.js","components/assessment-components/race/FacialPalsy.js","components/assessment-components/race/ArmMotorImpairment.js","components/assessment-components/race/LegMotorImpairment.js","components/assessment-components/race/GazeDeviation.js","components/assessment-components/race/Hemiparesis.js","components/assessment-components/race/Agnosia.js","components/assessment-components/race/Aphasia.js","components/Assessment.js","utils/ScriptCache.js","components/recommendation.js","components/map/map.js","utils/GoogleApi.js","utils/GoogleApiComponent.js","components/map/hospitalCard.js","components/map/mapView.js","components/results.js","store/reducers/authReducer.js","components/HOC/requireAuth.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","urlsToCache","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","console","self","addEventListener","event","waitUntil","caches","open","cache","addAll","evt","keys","keyList","Promise","all","map","key","delete","clients","claim","request","mode","respondWith","fetch","App","props","children","serverUrl","apiKey","setAuthenticationHeader","token","axios","defaults","headers","common","connect","isAuth","auth","dispatch","setAuthState","type","payload","useState","username","password","password2","user","setUser","setmode","toggleState","setError","handleChange","e","target","name","value","handleSubmit","length","post","env","res","data","success","localStorage","setItem","Fragment","to","className","style","htmlFor","id","onChange","onClick","AgeInRange","submitAnswer","answer","setAnswer","nextQuestion","LastKnownWell","lkwTime","setLkwTime","infoBox","setInfoBox","submitNullAnswer","prevQuestion","handleAnswer","currentDateTime","Date","currentHour","getHours","currentMinute","getMinutes","lkwHour","parseInt","lkwMinute","lkwDateTimeString","currentDateString","toISOString","slice","yesterdayDateTime","setDate","getDate","yesterdayDateString","generateLkwDateTimeString","RecentSurgery","Pregnancy","Anticoagulants","FacialPalsy","ArmMotorImpairment","LegMotorImpairment","GazeDeviation","Hemiparesis","completeAssessment","Agnosia","Aphasia","Assessment","global","vh","innerHeight","document","documentElement","setProperty","innerheight","percentComplete","componentToRender","setComponentToRender","ageInRange","lastKnownWell","String","timeSinceLKW","recentSurgery","pregnancy","anticoagulants","tpa","setTpa","facialPalsy","Number","armMotorImpairment","legMotorImpairment","gazeDeviation","hemiparesis","hemiparesisSide","agnosia","aphasia","ready","race","setRace","handleTpaAnswer","keyName","valueName","handleRaceAnswer","sendToCalcScore","lkwYear","lkwMonth","lkwDay","lkwHours","lkwMinutes","lkwSeconds","timeSinceLkw","hoursSinceLkw","Math","round","history","push","updatePercentComplete","renderQuestion","Recommendations","recommendationText","useEffect","log","triage","score","Object","forEach","criteria","tpaCriteria","tPA","setResults","lvo","anticoags","calcRaceScore","results","scoreColor","switchView","Map","withScriptjs","withGoogleMap","defaultZoom","defaultCenter","center","position","hospitals","hospital","_id","icon","url","lat","loc","coordinates","lng","getDirections","setActive","active","setAsActive","directionsOn","directions","counter","scriptMap","ScriptCache","scripts","Cache","cb","stored","get","promise","src","has","tag","createElement","initialState","loaded","resolve","reject","body","getElementsByTagName","async","cbName","now","handleResult","resolved","errored","cleanup","onload","onerror","onreadystatechange","readyState","replace","appendChild","set","script","_scriptTag","onLoad","_onLoad","GoogleApi","opts","libraries","client","google","params","callback","join","v","channel","language","region","paramStr","filter","k","defaultMapConfig","wrapper","options","WrappedComponent","context","refs","this","scriptCache","err","maps","mapRef","assign","node","ReactDOM","findDOMNode","LatLng","mapConfig","zoom","setState","mapComponent","ref","React","Component","HospitalCard","distance","duration","setHospital","DirectionsService","route","origin","destination","travelMode","TravelMode","DRIVING","result","status","DirectionsStatus","OK","routes","legs","text","address","CSC","EVMT","PSC","TPA","renderAttributes","GoogleApiComponent","hospitalsFetched","setLocation","setDirections","activeHospital","setActiveHospital","setHospitals","sortHospitals","sort","a","b","u","PI","acos","sin","cos","grabLocation","geolocation","getCurrentPosition","processPosition","coords","latitude","longitude","renderActiveHospital","openGoogle","response","locateUser","patient","sent","sendToHospital","renderSendToHospital","googleMapURL","toString","loadingElement","height","containerElement","mapElement","i","component","setComponent","rec","setPatient","hospitalId","userLocation","recHospitals","postPatient","renderComponent","userId","reducer","action","ComposedComponent","Authenticate","rootReducer","combineReducers","authorizationReducer","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","getItem","render","exact","path","Login","Results","getElementById","URL","process","href","contentType","indexOf","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.cd22e6aa.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nvar CACHE_NAME = 'my-pwa-cache-v1';\nvar urlsToCache = [\n  '/offline.html'\n];\n\nwindow.self.addEventListener('install', function(event) {\n  event.waitUntil(\n    caches.open(CACHE_NAME)\n      .then(function(cache) {\n        return cache.addAll(urlsToCache);\n      })\n  );\n});\n\nwindow.self.addEventListener('activate', (evt) => {\n  evt.waitUntil(\n    caches.keys().then((keyList) => {\n      return Promise.all(keyList.map((key) => {\n        if (key !== CACHE_NAME) {\n          return caches.delete(key);\n        }\n      }));\n    })\n);\n\n  window.self.clients.claim();\n});\n\nwindow.self.addEventListener('fetch', (evt) => {\n  if (evt.request.mode !== 'navigate') {\n    // Not a page navigation, bail.\n    return;\n  }\n  evt.respondWith(\n      fetch(evt.request)\n          .catch(() => {\n            return caches.open(CACHE_NAME)\n                .then((cache) => {\n                  return cache.match('offline.html');\n                });\n          })\n  );\n});\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\nfunction App(props) {\n  return (\n    <div>\n      {props.children}\n    </div>\n  )\n}\n\nexport default App;\n","export const serverUrl = 'https://whispering-eyrie-17795.herokuapp.com'\nexport const apiKey = 'AIzaSyBeqlzrmOWRWZaCJGv7Od17o62_D8aZDto'","import axios from 'axios'\n\nexport const setAuthenticationHeader = token => {\n    token ? axios.defaults.headers.common['Authorization'] = `Bearer ${token}` : delete axios.defaults.headers.common['Authorization']\n}","import React, {useState} from 'react'\nimport {connect} from 'react-redux'\nimport {Redirect} from 'react-router-dom'\nimport * as actionCreators from '../store/actions/actionCreators'\nimport '../css/login.css'\nimport axios from 'axios'\nimport * as env from '../env'\nimport { setAuthenticationHeader } from '../utils/authenticate';\n\nconst Login = (props) => {\n\n    const [user, setUser] = useState({\n        username: null,\n        password: \"\",\n        password2: null\n    })\n\n    const [mode, setmode] = useState('login')\n    const toggleState = () => {\n        mode === 'login' ? setmode('register') : setmode('login')\n    }\n\n    const [error, setError] = useState(\"\")\n\n    const handleChange = (e) => {\n        setUser({\n            ...user,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    const handleSubmit = () => {\n        if (mode === 'register' && user.username.length < 5) {\n            setError('Username must be at least 5 characters')\n        } else {\n            axios.post(`${env.serverUrl}/u/${mode}`, user)\n            .then(res => {\n                if (res.data.success) {\n                    localStorage.setItem('jsonwebtoken', res.data.token)\n                    setAuthenticationHeader(res.data.token)\n                    props.setAuthState(res.data)\n                } else if (res.data.error) {\n                    setError(res.data.error)\n                } else {\n                    setError(\"Error: Could not complete request\")\n                }\n            })\n        }\n    }\n\n    const renderLogin = () => {\n        return (\n            <div className=\"loginContainer\">\n                <div className=\"pageComponent login\">\n                    <h1 className=\"login\">Welcome Back!</h1>\n                    <h3 style={{\"backgroundColor\": \"#badc58\", \"borderRadius\": \"4px\", \"padding\": \"10px\"}}>Guest Username: guest123<br/>Guest Password: strokeroute</h3>\n                    <div className=\"inputDiv login\">\n                        <div>\n                        <label htmlFor=\"username\">Username</label>\n                        <input id=\"username\" type=\"text\" name=\"username\" onChange={handleChange} />\n                        </div>\n                        <div>\n                        <label htmlFor=\"password\">Password</label>\n                        <input id=\"password\" type=\"password\" name=\"password\" onChange={handleChange} />\n                        </div>\n                    </div>\n                    <div className=\"buttonsDiv login\">\n                        <button className=\"submitButton login\" onClick={handleSubmit}>Log In</button>\n                        <button className=\"toggleButton login\" onClick={toggleState}>Register</button>\n                    </div>\n                    <span className=\"errorSpan login\">{error}</span>\n                </div>\n            </div>\n        )\n    }\n\n    const passwordFlag = () => {\n        if (user.password.length < 7 || user.password === null) {return <span className=\"errorSpan login\">Password must be at least 7 characters</span>}\n        else if (user.password !== user.password2) {return <span className=\"errorSpan login\">Passwords don't match</span>}\n        else if (user.password === user.password2) {return <span className=\"errorSpan success login\">Passwords match!</span>}\n    }\n\n    const renderRegister = () => {\n        return (\n            <div className=\"loginContainer\">\n                <div className=\"pageComponent login\">\n                    <h1 className=\"login\">Let's set you up.</h1>\n                    <div className=\"login inputDiv\">\n                        <div>\n                            <label htmlFor=\"username\">Make a username:</label>\n                            <input type=\"text\" name=\"username\" onChange={handleChange} />\n                        </div>\n                        <div>\n                            <label htmlFor=\"password\">Create a password:</label>\n                            <input type=\"password\" name=\"password\" onChange={handleChange} />\n                        </div>\n                        <div>\n                            <label htmlFor=\"password2\">Re-enter your password:</label>\n                            <input type=\"password\" name=\"password2\" onChange={handleChange} />\n                        {passwordFlag()}\n                        </div>\n                    </div>\n                    <span className=\"errorSpan login\">{error}</span>\n                    <div className=\"login buttonsDiv\">\n                        <button className=\"submitButton login\" onClick={handleSubmit}>Register</button>\n                        <button className=\"toggleButton login\" onClick={toggleState}>Log in</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <React.Fragment>\n            {props.isAuth ? <Redirect to=\"/assessment\" /> : null}\n            {mode === 'login' ? renderLogin() : renderRegister()}\n        </React.Fragment>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isAuth: state.auth.isAuth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setAuthState: auth => dispatch(actionCreators.setAuthState(auth))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)","\nimport * as actionTypes from './actionTypes'\n\nexport const setAuthState = (user) => {\n    return {\n        type: 'SET_AUTH',\n        payload: user\n    }\n}\n\nexport const setUser = (userId) => {\n    return {\n        type: 'SET_USER',\n        payload: userId\n    }\n}\n\n// export const setPatient = (patientId) => {\n//     return {\n//         type: actionTypes.SET_PATIENT, \n//         payload: patientId\n//     }\n// }\n\n// export const storeAnswer = (answerObj) => {\n//     return {\n//         type: actionTypes.STORE_ANSWER, \n//         payload: answerObj\n//     }\n// }\n\n// export const incrementComponentToRender = () => {\n//     return {\n//         type: actionTypes.INC_COMP_TO_RENDER\n//     }\n// }\n\n// export const decrementComponentToRender = () => {\n//     return {\n//         type: actionTypes.DEC_COMP_TO_RENDER\n//     }\n// }","import React,{useState} from 'react';\n\nfunction AgeInRange(props) {\n\n    const [infoBox, setInfoBox] = useState(false)\n\n\n    const displayInfo = () => {\n        infoBox ? setInfoBox(false) : setInfoBox(true)\n    }\n\n    const createInfoBox = () => {\n        return (\n            <div className=\"info-text\">\n                \n            </div>\n        )\n    }\n    // <i className=\"fas fa-info-circle\" onClick={() => displayInfo()}></i>\n\n    const submitAnswer = (answer) => {\n        props.setAnswer('ageInRange', answer)\n        props.nextQuestion('LastKnownWell')\n    }\n\n\n    return (\n        <React.Fragment>\n        <div className=\"assessment-header\">\n            <h4>tPA Exclusion Assessment</h4>\n            <div className=\"progress-border\">\n                <div className=\"progress-fill\"></div>\n            </div>\n        </div>\n\n        <div className=\"assessment-container\">\n            <div className=\"question-container\">\n                <span className=\"question-text\">Is the patient over the age of 18 and under the age of 80? </span>\n                {/* {infoBox ? createInfoBox() : null} */}\n            </div>\n            <div className=\"answer-container\">\n                <button onClick={() => submitAnswer(true)}>Yes</button>\n                <button onClick={() => submitAnswer(false)}>No</button>\n                <button onClick={() => props.nextQuestion('LastKnownWell')}>Unknown</button>\n            </div>\n        </div>\n        </React.Fragment>\n    );\n\n}\n\nexport default AgeInRange;\n","import React,{useState} from 'react';\n\nfunction LastKnownWell(props) {\n\n    const [lkwTime, setLkwTime] = useState('')\n    const [infoBox, setInfoBox] = useState(false)\n\n    \n    const displayInfo = () => {\n        infoBox ? setInfoBox(false) : setInfoBox(true)\n    }\n\n    const createInfoBox = () => {\n        return (\n            <div className=\"info-text\">\n                Last time the patient was seen without stroke-like symptoms, at baseline level of health.\n            </div>\n        )\n    }\n\n    const handleAnswer = (e) => {\n\n        setLkwTime(e.target.value)\n\n    }\n\n    const submitAnswer = () => {\n\n        const currentDateTime = new Date()\n        const currentHour = currentDateTime.getHours()\n        const currentMinute = currentDateTime.getMinutes()\n        const lkwHour = parseInt(lkwTime[0]+lkwTime[1])\n        const lkwMinute = parseInt(lkwTime[4]+lkwTime[5])\n\n        const generateLkwDateTimeString = () => {\n            let lkwDateTimeString\n            //determine if lkw date is current date or previous date\n            if (lkwHour < currentHour || (lkwHour === currentHour && lkwMinute < currentMinute)) {\n                let currentDateString = (currentDateTime.toISOString()).slice(0,11)\n                lkwDateTimeString = `${currentDateString}${lkwTime}.000Z`\n            } else {\n                let yesterdayDateTime = new Date()\n                yesterdayDateTime.setDate(currentDateTime.getDate() - 1)\n                let yesterdayDateString = (yesterdayDateTime.toISOString()).slice(0,11)\n                lkwDateTimeString = `${yesterdayDateString}${lkwTime}.000Z`\n            }\n            return lkwDateTimeString\n        }\n\n        const lkwDateTimeString = generateLkwDateTimeString()\n\n\n        props.setAnswer('lastKnownWell', lkwDateTimeString)\n        props.nextQuestion('RecentSurgery')\n\n    }\n\n    const submitNullAnswer = () => {\n\n        props.setAnswer('lastKnownWell', null)\n        props.nextQuestion('RecentSurgery')\n\n    }\n\n    return (\n        <React.Fragment>\n        <div className=\"assessment-header\">\n            <a onClick={() => {props.prevQuestion('AgeInRange')}}>{`< Back`}</a>\n            <h4>tPA Exclusion Assessment</h4>\n            <div className=\"progress-border\">\n                <div className=\"progress-fill\"></div>\n            </div>\n        </div>\n\n        <div className=\"assessment-container\">\n            <div className=\"question-container\">\n                <span className=\"question-text\">What is the last time the patient was seen well? <i className=\"fas fa-info-circle\" onClick={() => displayInfo()}></i></span>\n                {infoBox ? createInfoBox() : null}\n            </div>\n            <div className=\"answer-container\">\n                <input type=\"time\" name=\"lkw-time\" onChange={(e) => handleAnswer(e)}></input>\n                {lkwTime == '' ? <button id=\"disabled-button\">Submit</button> : <button onClick={() => submitAnswer()}>Submit</button>}\n                <button onClick={() => submitNullAnswer()}>More than 24 hours ago</button>\n                <button onClick={() => submitNullAnswer()}>Unknown</button>\n            </div>\n        </div>\n        </React.Fragment>\n    );\n\n}\n\nexport default LastKnownWell;\n","import React,{useState} from 'react';\n\nfunction RecentSurgery(props) {\n\n    const [infoBox, setInfoBox] = useState(false)\n\n    const displayInfo = () => {\n        infoBox ? setInfoBox(false) : setInfoBox(true)\n    }\n\n    const createInfoBox = () => {\n        return (\n            <div className=\"info-text\">\n                Includes major surgeries, such as cardiac, neuro, or any intravenous surgical procedure\n            </div>\n        )\n    }\n\n    const submitAnswer = (answer) => {\n        props.setAnswer('recentSurgery', answer)\n        props.nextQuestion('Pregnancy')\n    }\n\n\n    return (\n        <React.Fragment>\n        <div className=\"assessment-header\">\n            <a onClick={() => props.prevQuestion('LastKnownWell')}>{`< Back`}</a>\n            <h4>tPA Exclusion Assessment</h4>\n            <div className=\"progress-border\">\n                <div className=\"progress-fill\"></div>\n            </div>\n        </div>\n\n        <div className=\"assessment-container\">\n            <div className=\"question-container\">\n                <span className=\"question-text\">Has the patient had surgery in the last 3 months? <i className=\"fas fa-info-circle\" onClick={() => displayInfo()}></i></span><span className=\"info-icon-span\"></span>\n                {infoBox ? createInfoBox() : null}\n            </div>\n            <div className=\"answer-container\">\n                <button onClick={() => submitAnswer(true)}>Yes</button>\n                <button onClick={() => submitAnswer(false)}>No</button>\n                <button onClick={() => props.nextQuestion('Pregnancy')}>Unknown</button>\n            </div>\n        </div>\n        </React.Fragment>\n    );\n\n}\n\nexport default RecentSurgery;\n","import React,{useState} from 'react';\n\nfunction Pregnancy(props) {\n\n    const [infoBox, setInfoBox] = useState(false)\n\n    const displayInfo = () => {\n        infoBox ? setInfoBox(false) : setInfoBox(true)\n    }\n\n    const createInfoBox = () => {\n        return (\n            <div className=\"info-text\">\n                this is help text for this question. boiler plate boiler plate boiler plate boiler plate boiler plate boiler plate\n            </div>\n        )\n    }\n\n    const submitAnswer = (answer) => {\n        props.setAnswer('pregnancy', answer)\n        props.nextQuestion('Anticoagulants')\n    }\n\n    return (\n        <React.Fragment>\n        <div className=\"assessment-header\">\n            <a onClick={() => props.prevQuestion('RecentSurgery')}>{`< Back`}</a>\n            <h4>tPA Exclusion Assessment</h4>\n            <div className=\"progress-border\">\n                <div className=\"progress-fill\"></div>\n            </div>\n        </div>\n\n        <div className=\"assessment-container\">\n            <div className=\"question-container\">\n                <span className=\"question-text\">Is the patient pregnant? </span>\n                {/* {infoBox ? createInfoBox() : null} */}\n            </div>\n            <div className=\"answer-container\">\n                <button onClick={() => submitAnswer(true)}>Yes</button>\n                <button onClick={() => submitAnswer(false)}>No</button>\n                <button onClick={() => props.nextQuestion('Anticoagulants')}>Unknown</button>\n            </div>\n        </div>\n        </React.Fragment>\n    );\n\n}\n\nexport default Pregnancy;\n","import React,{useState} from 'react';\n\nfunction Anticoagulants(props) {\n\n    const [infoBox, setInfoBox] = useState(false)\n\n    const displayInfo = () => {\n        infoBox ? setInfoBox(false) : setInfoBox(true)\n    }\n\n    const createInfoBox = () => {\n        return (\n            <div className=\"info-text\">\n                Common types include <b>heparin</b>, <b>warfarin</b> (Coumadin), <b>rivaroxaban</b> (Xarelto), <b>dabigatran</b> (Pradaxa) & <b>apixaban</b> (Eliquis)\n            </div>\n        )\n    }\n    \n    const submitAnswer = (answer) => {\n        props.setAnswer('anticoagulants', answer)\n        props.nextQuestion('FacialPalsy')\n    }\n\n    return (\n        <React.Fragment>\n        <div className=\"assessment-header\">\n            <a onClick={() => props.prevQuestion('Pregnancy')}>{`< Back`}</a>\n            <h4>tPA Exclusion Assessment</h4>\n            <div className=\"progress-border\">\n                <div className=\"progress-fill\"></div>\n            </div>\n        </div>\n\n        <div className=\"assessment-container\">\n            <div className=\"question-container\">\n                <span className=\"question-text\">Is the patient on anticoagulants? <i className=\"fas fa-info-circle\" onClick={() => displayInfo()}></i></span>\n                {infoBox ? createInfoBox() : null}\n            </div>\n            <div className=\"answer-container\">\n                <button onClick={() => submitAnswer(true)}>Yes</button>\n                <button onClick={() => submitAnswer(false)}>No</button>\n                <button onClick={() => props.nextQuestion('FacialPalsy')}>Unknown</button>\n            </div>\n        </div>\n        </React.Fragment>\n    );\n\n}\n\nexport default Anticoagulants;\n","import React,{useState} from 'react';\n\nfunction FacialPalsy(props) {\n\n    const [infoBox, setInfoBox] = useState(false)\n\n    const displayInfo = () => {\n        infoBox ? setInfoBox(false) : setInfoBox(true)\n    }\n\n    const createInfoBox = () => {\n        return (\n            <div className=\"info-text\">\n                Ask the patient to smile or show their teeth, and note if one side of their face responds less - or doesn't respond at all\n            </div>\n        )\n    }\n\n    const submitAnswer = (answer) => {\n        props.setAnswer('facialPalsy', answer)\n        props.nextQuestion('ArmMotorImpairment')\n    }\n\n    return (\n        <React.Fragment>\n        <div className=\"assessment-header\">\n            <a onClick={() => props.prevQuestion('Anticoagulants')}>{`< Back`}</a>\n            <h4>RACE Assessment</h4>\n            <div className=\"progress-border\">\n                <div className=\"progress-fill\"></div>\n            </div>\n        </div>\n\n        <div className=\"assessment-container\">\n            <div className=\"question-container\">\n                <span className=\"question-text\">Is the patient experiencing facial palsy? <i className=\"fas fa-info-circle\" onClick={() => displayInfo()}></i></span>\n                {infoBox ? createInfoBox() : null}\n            </div>\n            <div className=\"answer-container\">\n                <button onClick={() => submitAnswer(0)}>Absent</button>\n                <button onClick={() => submitAnswer(1)}>Mild</button>\n                <button onClick={() => submitAnswer(2)}>Moderate to Severe</button>\n            </div>\n        </div>\n        </React.Fragment>\n    );\n\n}\n\nexport default FacialPalsy;\n","import React,{useState} from 'react';\n\nfunction ArmMotorImpairment(props) {\n\n    const [infoBox, setInfoBox] = useState(false)\n\n    const displayInfo = () => {\n        infoBox ? setInfoBox(false) : setInfoBox(true)\n    }\n\n    const createInfoBox = () => {\n        return (\n            <div className=\"info-text\">\n                Extend arm 90deg if sitting, 45deg if prone. Check <b>severe</b> if there is no effort against gravity, <b>moderate</b> if arm drifts down within 10 seconds.\n            </div>\n        )\n    }\n\n    const submitAnswer = (answer) => {\n        props.setAnswer('armMotorImpairment', answer)\n        props.nextQuestion('LegMotorImpairment')\n    }\n\n\n    return (\n        <React.Fragment>\n        <div className=\"assessment-header\">\n            <a onClick={() => props.prevQuestion('FacialPalsy')}>{`< Back`}</a>\n            <h4>RACE Assessment</h4>\n            <div className=\"progress-border\">\n                <div className=\"progress-fill\"></div>\n            </div>\n        </div>\n\n        <div className=\"assessment-container\">\n            <div className=\"question-container\">\n                <span className=\"question-text\">Is the patient experiencing any arm weakness?<i className=\"fas fa-info-circle\" onClick={() => displayInfo()}></i></span>\n                {infoBox ? createInfoBox() : null}\n            </div>\n            <div className=\"answer-container\">\n                <button onClick={() => submitAnswer(0)}>Normal to Mild</button>\n                <button onClick={() => submitAnswer(1)}>Moderate</button>\n                <button onClick={() => submitAnswer(2)}>Severe</button>\n            </div>\n        </div>\n        </React.Fragment>\n    );\n\n}\n\nexport default ArmMotorImpairment;\n","import React,{useState} from 'react';\n\nfunction LegMotorImpairment(props) {\n\n    const [infoBox, setInfoBox] = useState(false)\n    \n    const displayInfo = () => {\n        infoBox ? setInfoBox(false) : setInfoBox(true)\n    }\n\n    const createInfoBox = () => {\n        return (\n            <div className=\"info-text\">\n                Extend leg 30deg if laying down. Check <b>severe</b> if there is no effort against gravity, <b>moderate</b> if leg drifts down within 5 seconds.\n            </div>\n        )\n    }\n\n    const submitAnswer = (answer) => {\n        props.setAnswer('legMotorImpairment', answer)\n        props.nextQuestion('GazeDeviation')\n    }\n\n\n    return (\n        <React.Fragment>\n        <div className=\"assessment-header\">\n            <a onClick={() => props.prevQuestion('ArmMotorImpairment')}>{`< Back`}</a>\n            <h4>RACE Assessment</h4>\n            <div className=\"progress-border\">\n                <div className=\"progress-fill\"></div>\n            </div>\n        </div>\n\n        <div className=\"assessment-container\">\n            <div className=\"question-container\">\n                <span className=\"question-text\">Is the patient experiencing leg weakness? <i className=\"fas fa-info-circle\" onClick={() => displayInfo()}></i></span>\n                {infoBox ? createInfoBox() : null}\n            </div>\n            <div className=\"answer-container\">\n                <button onClick={() => submitAnswer(0)}>Normal to Mild</button>\n                <button onClick={() => submitAnswer(1)}>Moderate</button>\n                <button onClick={() => submitAnswer(2)}>Severe</button>\n            </div>\n        </div>\n        </React.Fragment>\n    );\n\n}\n\nexport default LegMotorImpairment;\n","import React,{useState} from 'react';\n\nfunction GazeDeviation(props) {\n\n    const [infoBox, setInfoBox] = useState(false)\n\n    const displayInfo = () => {\n        infoBox ? setInfoBox(false) : setInfoBox(true)\n    }\n\n    const createInfoBox = () => {\n        return (\n            <div className=\"info-text\">\n                <b>Absent/mild</b> - Eyes move freely, or with slight resistance from side to side. <b>Present</b> - Eyes show clear preference to one side\n            </div>\n        )\n    }\n\n    const submitAnswer = (answer) => {\n        props.setAnswer('gazeDeviation', answer)\n        props.nextQuestion('Hemiparesis')\n    }\n\n    return (\n        <React.Fragment>\n        <div className=\"assessment-header\">\n            <a onClick={() => props.prevQuestion('LegMotorImpairment')}>{`< Back`}</a>\n            <h4>RACE Assessment</h4>\n            <div className=\"progress-border\">\n                <div className=\"progress-fill\"></div>\n            </div>\n        </div>\n\n        <div className=\"assessment-container\">\n            <div className=\"question-container\">\n                <span className=\"question-text\">Is the patient experiencing gaze deviation? <i className=\"fas fa-info-circle\" onClick={() => displayInfo()}></i></span>\n                {infoBox ? createInfoBox() : null}\n            </div>\n            <div className=\"answer-container\">\n                <button onClick={() => submitAnswer(0)}>Absent</button>\n                <button onClick={() => submitAnswer(1)}>Present</button>\n            </div>\n        </div>\n        </React.Fragment>\n    );\n\n}\n\nexport default GazeDeviation;\n","import React,{useState} from 'react';\n\nfunction Hemiparesis (props) {\n\n    const [infoBox, setInfoBox] = useState(false)\n\n    const displayInfo = () => {\n        infoBox ? setInfoBox(false) : setInfoBox(true)\n    }\n\n    const createInfoBox = () => {\n        return (\n            <div className=\"info-text\">\n                Patient shows clear lateral weakness in arms, legs, and/or facial muscles. This response will code into either Agnosia or Aphasia assessment depending on affected side.\n            </div>\n        )\n    }\n\n    const submitAnswer = (answer) => {\n        props.setAnswer(['hemiparesis', 'hemiparesisSide'], answer)\n        switch (answer[1]) {\n            case null:\n                props.completeAssessment()\n                return\n            case 'left':\n                props.nextQuestion('Agnosia')\n                return\n            case 'right':\n                props.nextQuestion('Aphasia')\n                return\n        }\n    }\n\n    return (\n        <React.Fragment>\n        <div className=\"assessment-header\">\n            <a onClick={() => props.prevQuestion('GazeDeviation')}>{`< Back`}</a>\n            <h4>RACE Assessment</h4>\n            <div className=\"progress-border\">\n                <div className=\"progress-fill\"></div>\n            </div>\n        </div>\n\n        <div className=\"assessment-container\">\n            <div className=\"question-container\">\n                <span className=\"question-text\"> Does patient have definite hemiparesis? <i className=\"fas fa-info-circle\" onClick={() => displayInfo()}></i></span><span className=\"info-icon-span\"></span>\n                {infoBox ? createInfoBox() : null}\n            </div>\n            <div className=\"answer-container\">\n                <button onClick={() => submitAnswer([false, null])}>Absent</button>\n                <button onClick={() => submitAnswer([true, 'left'])}>Present: Left Side</button>\n                <button onClick={() => submitAnswer([true, 'right'])}>Present: Right Side</button>\n            </div>\n        </div>\n        </React.Fragment>\n    );\n\n}\n\nexport default Hemiparesis;\n","import React,{useState} from 'react';\n\nfunction Agnosia(props) {\n\n    const [infoBox, setInfoBox] = useState(false)\n\n    const displayInfo = () => {\n        infoBox ? setInfoBox(false) : setInfoBox(true)\n    }\n\n    const createInfoBox = () => {\n        return (\n            <div className=\"info-text\">\n                Refer to the patient's weak arm, and ask \"Whose arm is this?\" Ask the patient to move that arm.<br /><b>Moderate:</b> Patient performs 1 task correctly.<br /><b>Severe:</b> Patient performs neither task correctly\n            </div>\n        )\n    }\n\n    const goBack = () => {\n        props.setAnswer('agnosia', null)\n        props.prevQuestion('Hemiparesis')\n    }\n\n    const submitAnswer = (answer) => {\n        props.setAnswer(['agnosia', 'ready'], [answer, true])\n    }\n\n    return (\n        <React.Fragment>\n        <div className=\"assessment-header\">\n            <a onClick={() => goBack()}>{`< Back`}</a>\n            <h4>RACE Assessment</h4>\n            <div className=\"progress-border\">\n                <div className=\"progress-fill\"></div>\n            </div>\n        </div>\n\n        <div className=\"assessment-container\">\n            <div className=\"question-container\">\n                <span className=\"question-text\">Is the patient experiencing Agnosia/Neglect? <i className=\"fas fa-info-circle\" onClick={() => displayInfo()}></i></span>\n                {infoBox ? createInfoBox() : null}\n            </div>\n            <div className=\"answer-container\">\n                <button onClick={() => submitAnswer(0)}>Absent</button>\n                <button onClick={() => submitAnswer(1)}>Moderate</button>\n                <button onClick={() => submitAnswer(2)}>Severe</button>\n            </div>\n        </div>\n        </React.Fragment>\n    );\n\n}\n\nexport default Agnosia;\n","import React,{useState} from 'react';\n\nfunction Aphasia(props) {\n\n    const [infoBox, setInfoBox] = useState(false)\n\n    const displayInfo = () => {\n        infoBox ? setInfoBox(false) : setInfoBox(true)\n    }\n\n    const createInfoBox = () => {\n        return (\n            <div className=\"info-text\">\n                Does the patient understand commands? Ask the patient to close their eyes, and make a fist.<br/><b>Moderate:</b> Patient performs 1 task correctly.<br /><b>Severe:</b> Patient performs neither task correctly.\n            </div>\n        )\n    }\n\n    const goBack = () => {\n        props.setAnswer('aphasia', null)\n        props.prevQuestion('Hemiparesis')\n    }\n\n    const submitAnswer = (answer) => {\n        props.setAnswer(['aphasia', 'ready'], [answer, true])\n    }\n\n    return (\n        <React.Fragment>\n        <div className=\"assessment-header\">\n            <a onClick={() => goBack()}>{`< Back`}</a>\n            <h4>RACE Assessment</h4>\n            <div className=\"progress-border\">\n                <div className=\"progress-fill\"></div>\n            </div>\n        </div>\n\n        <div className=\"assessment-container\">\n            <div className=\"question-container\">\n                <span className=\"question-text\">Is the patient experiencing Aphasia? <i className=\"fas fa-info-circle\" onClick={() => displayInfo()}></i></span>\n                {infoBox ? createInfoBox() : null}\n            </div>\n            <div className=\"answer-container\">\n                <button onClick={() => submitAnswer(0)}>Performs both tasks correctly</button>\n                <button onClick={() => submitAnswer(1)}>Performs 1 task correctly</button>\n                <button onClick={() => submitAnswer(2)}>Performs neither task</button>\n            </div>\n        </div>\n        </React.Fragment>\n    );\n\n}\n\nexport default Aphasia;\n","import React,{useState} from 'react';\n\n//tpa questions\nimport AgeInRange from './assessment-components/tpa/AgeInRange'\nimport LastKnownWell from './assessment-components/tpa/LastKnownWell'\nimport RecentSurgery from './assessment-components/tpa/RecentSurgery'\nimport Pregnancy from './assessment-components/tpa/Pregnancy'\nimport Anticoagulants from './assessment-components/tpa/Anticoagulants'\n\n//race questions\nimport FacialPalsy from './assessment-components/race/FacialPalsy'\nimport ArmMotorImpairment from './assessment-components/race/ArmMotorImpairment'\nimport LegMotorImpairment from './assessment-components/race/LegMotorImpairment'\nimport GazeDeviation from './assessment-components/race/GazeDeviation'\nimport Hemiparesis from './assessment-components/race/Hemiparesis'\nimport Agnosia from './assessment-components/race/Agnosia'\nimport Aphasia from './assessment-components/race/Aphasia'\n\n\nfunction Assessment(props) {\n\n    let vh = window.innerHeight * 0.01\n    document.documentElement.style.setProperty('--vh', `${vh}px`)\n\n    window.addEventListener('resize', () => {\n        let vh = window.innerheight * 0.01\n        document.documentElement.style.setProperty('--vh', `${vh}px`)\n    })\n\n    const [componentToRender, setComponentToRender] = useState('AgeInRange')\n    const [tpa, setTpa] = useState({\n                                    ageInRange: null | Boolean,\n                                    lastKnownWell: null | String,\n                                    timeSinceLKW: null | String,\n                                    recentSurgery: null | Boolean,\n                                    pregnancy: null | Boolean,\n                                    anticoagulants: null | Boolean\n                                    })\n    const [race, setRace] = useState({\n                                    facialPalsy: null | Number,\n                                    armMotorImpairment: null | Number,\n                                    legMotorImpairment: null | Number,\n                                    gazeDeviation: null | Number,\n                                    hemiparesis: null | Boolean,\n                                    hemiparesisSide: null | String,\n                                    agnosia: null | Number,\n                                    aphasia: null | Number,\n                                    ready: false\n                                    })\n\n    const handleTpaAnswer = (keyName, valueName) => {\n        setTpa({...tpa, [keyName]: valueName})\n    }\n\n    const handleRaceAnswer = (keyName, valueName) => {\n        if (typeof keyName === 'string') {\n            setRace({...race, [keyName]: valueName})\n        } else {\n            setRace({...race, [keyName[0]]: valueName[0], [keyName[1]]: valueName[1]})\n        }\n        \n    }\n\n    const sendToCalcScore = () => {\n        if (tpa.lastKnownWell) {\n            const currentDateTime = new Date()\n\n            let lastKnownWell = tpa.lastKnownWell\n            let lkwYear = parseInt(lastKnownWell.slice(0,4))\n            let lkwMonth = parseInt(lastKnownWell.slice(5,7)) - 1\n            let lkwDay = parseInt(lastKnownWell.slice(8,10))\n            let lkwHours = parseInt(lastKnownWell.slice(11,13))\n            let lkwMinutes = parseInt(lastKnownWell.slice(14,16))\n            let lkwSeconds = parseInt(lastKnownWell.slice(17,20))\n            const lkwDateTime = new Date(lkwYear, lkwMonth, lkwDay, lkwHours, lkwMinutes, lkwSeconds)\n    \n            const timeSinceLkw = currentDateTime - lkwDateTime\n            const hoursSinceLkw = Math.round(timeSinceLkw/3600000 * 10) / 10\n    \n            props.history.push('/results', {tpa: {...tpa, timeSinceLKW: hoursSinceLkw}, race: race})\n        } else {\n            props.history.push('/results', {tpa: tpa, race: race})\n        }\n\n    }\n\n    let percentComplete = '0%'\n    const updatePercentComplete = () => {\n        switch (componentToRender) {\n            case 'AgeInRange':\n                return '0%'\n            case 'LastKnownWell':\n                return '9%'\n            case 'RecentSurgery':\n                return '18%'\n            case 'Pregnancy':\n                return '27%'\n            case 'Anticoagulants':\n                return '36%'\n            case 'FacialPalsy':\n                return '45%'\n            case 'ArmMotorImpairment':\n                return '54%'\n            case 'LegMotorImpairment':\n                return '63%'\n            case 'GazeDeviation':\n                return '72%'\n            case 'Hemiparesis':\n                return '81%'\n            case 'Agnosia':\n                return '90%'\n            case 'Aphasia':\n                return '90%'\n        }\n    }\n    percentComplete = updatePercentComplete()\n    document.documentElement.style.setProperty('--percentComplete', `${percentComplete}`)\n\n    const renderQuestion = () => {\n        switch (componentToRender) {\n            case 'AgeInRange':\n                return <AgeInRange nextQuestion={setComponentToRender} setAnswer={handleTpaAnswer} />\n            case 'LastKnownWell':\n                return <LastKnownWell prevQuestion={setComponentToRender} nextQuestion={setComponentToRender} setAnswer={handleTpaAnswer} />\n            case 'RecentSurgery':\n                return <RecentSurgery prevQuestion={setComponentToRender} nextQuestion={setComponentToRender} setAnswer={handleTpaAnswer} />\n            case 'Pregnancy':\n                return <Pregnancy prevQuestion={setComponentToRender} nextQuestion={setComponentToRender} setAnswer={handleTpaAnswer} />\n            case 'Anticoagulants':\n                return <Anticoagulants prevQuestion={setComponentToRender} nextQuestion={setComponentToRender} setAnswer={handleTpaAnswer} />\n            case 'FacialPalsy':\n                return <FacialPalsy prevQuestion={setComponentToRender} nextQuestion={setComponentToRender} setAnswer={handleRaceAnswer} />\n            case 'ArmMotorImpairment':\n                return <ArmMotorImpairment prevQuestion={setComponentToRender} nextQuestion={setComponentToRender} setAnswer={handleRaceAnswer} />\n            case 'LegMotorImpairment':\n                return <LegMotorImpairment prevQuestion={setComponentToRender} nextQuestion={setComponentToRender} setAnswer={handleRaceAnswer} />\n            case 'GazeDeviation':\n                return <GazeDeviation prevQuestion={setComponentToRender} nextQuestion={setComponentToRender} setAnswer={handleRaceAnswer} />\n            case 'Hemiparesis':\n                return <Hemiparesis prevQuestion={setComponentToRender} nextQuestion={setComponentToRender} setAnswer={handleRaceAnswer} completeAssessment={sendToCalcScore} />\n            case 'Agnosia':\n                return <Agnosia prevQuestion={setComponentToRender} nextQuestion={setComponentToRender} setAnswer={handleRaceAnswer} completeAssessment={sendToCalcScore} />\n            case 'Aphasia':\n                return <Aphasia prevQuestion={setComponentToRender} nextQuestion={setComponentToRender} setAnswer={handleRaceAnswer} completeAssessment={sendToCalcScore} />\n        }\n    }\n\n    if (race.ready) sendToCalcScore()\n\n    // useEffect(() => {},[])\n\n    return (\n        <div className=\"assessment\">\n            {renderQuestion()}\n        </div>\n    );\n}\n\nexport default Assessment;\n","let counter = 0;\nlet scriptMap = new Map();\n\nexport const ScriptCache = (function(global) {\n  return function ScriptCache (scripts) {\n    const Cache = {}\n\n    Cache._onLoad = function (key) {\n      return (cb) => {\n        let stored = scriptMap.get(key);\n        if (stored) {\n          stored.promise.then(() => {\n            stored.error ? cb(stored.error) : cb(null, stored)\n          })\n        } else {\n          // TODO:\n        }\n      }\n    }\n\n    Cache._scriptTag = (key, src) => {\n      if (!scriptMap.has(key)) {\n        let tag = document.createElement('script');\n        let promise = new Promise((resolve, reject) => {\n          let resolved = false,\n              errored = false,\n              body = document.getElementsByTagName('body')[0];\n\n          tag.type = 'text/javascript';\n          tag.async = false; // Load in order\n\n          const cbName = `loaderCB${counter++}${Date.now()}`;\n          let cb;\n\n          let handleResult = (state) => {\n            return (evt) => {\n              let stored = scriptMap.get(key);\n              if (state === 'loaded') {\n                stored.resolved = true;\n                resolve(src);\n                // stored.handlers.forEach(h => h.call(null, stored))\n                // stored.handlers = []\n              } else if (state === 'error') {\n                stored.errored = true;\n                // stored.handlers.forEach(h => h.call(null, stored))\n                // stored.handlers = [];\n                reject(evt)\n              }\n\n              cleanup();\n            }\n          }\n\n          const cleanup = () => {\n            if (global[cbName] && typeof global[cbName] === 'function') {\n              global[cbName] = null;\n            }\n          }\n\n          tag.onload = handleResult('loaded');\n          tag.onerror = handleResult('error')\n          tag.onreadystatechange = () => {\n            handleResult(tag.readyState)\n          }\n\n          // Pick off callback, if there is one\n          if (src.match(/callback=CALLBACK_NAME/)) {\n            src = src.replace(/(callback=)[^\\&]+/, `$1${cbName}`)\n            cb = window[cbName] = tag.onload;\n          } else {\n            tag.addEventListener('load', tag.onload)\n          }\n          tag.addEventListener('error', tag.onerror);\n\n          tag.src = src;\n          body.appendChild(tag);\n          return tag;\n        });\n        let initialState = {\n          loaded: false,\n          error: false,\n          promise: promise,\n          tag\n        }\n        scriptMap.set(key, initialState);\n      }\n      return scriptMap.get(key);\n    }\n\n    Object.keys(scripts).forEach(function(key) {\n      const script = scripts[key];\n      Cache[key] = {\n        tag:    Cache._scriptTag(key, script),\n        onLoad: Cache._onLoad(key)\n      }\n    })\n\n    return Cache;\n  }\n})(window)\n\nexport default ScriptCache;","import React, {useState, useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nconst Recommendations = (props) => {\n\n    const recommendationText = {\n        both: 'Patient is highly likely (> 85%) to have a Large Vessel Occlusion, but also may be a candidate for tPA. It is recommended to transport patient directly to a Thrombectomy-Capable Stroke Center, unless doing so will substantially increase travel time.',\n        lvo: 'Patient is highly likely (> 85%) to have a Large Vessel Occlusion, and is also not a candidate for tPA. It is recommended to transport patient directly to a Thrombectomy-Capable Stroke Center for further treatment.',\n        tpa: 'Patient is below the threshold indicating a high chance of Large Vessel Occlusion, but may be a candidate for tPA. It is recommended to transport patient to the closest Stroke Center',\n        neither: 'Patient is below the threshold indicating a high chance of Large Vessel Occlusion. It is recommended to transport patient to the closest Stroke Center',\n        none: 'Patient has no symptoms recognized by the RACE scale.'\n    }\n\n    const displayRecommendation = () => {\n        if (props.results.race === 0) {\n            return recommendationText.none\n        } else if (props.results.lvo && !props.results.tpa) {\n            return recommendationText.lvo\n        } else if (props.results.lvo && props.results.tpa) {\n            return recommendationText.both\n        } else if (!props.results.lvo && !props.results.tpa) {\n            return recommendationText.neither\n        } else if (!props.results.lvo && props.results.tpa) {\n            return recommendationText.tpa\n        }\n    }\n\n    const calcRaceScore = () => {\n        console.log(props.triage.race)\n        let score = 0\n        Object.keys(props.triage.race).forEach(criteria => {\n            if (criteria === \"hemiparesis\" || criteria === \"hemiparesisSide\" || criteria === \"ready\" ||props.triage.race[criteria] === null) {\n                return\n            } else {\n                score += (props.triage.race[criteria])\n            }\n        })\n\n        let tpaCriteria = props.triage.tPA\n        \n        props.setResults({\n            race: score,\n            lvo: score >= 5 ? true : false,\n            tpa: tpaCriteria.ageInRange && !tpaCriteria.anticoags && !tpaCriteria.pregnancy && !tpaCriteria.recentSurgery && tpaCriteria.timeSinceLKW <= 4.5 ? true : false\n        })\n    }\n\n    const scoreColor = () => {\n        switch(props.results.race) {\n            case 1:\n                return {\"color\": \"#badc58\"}\n            case 2:\n                return {\"color\": \"#f1c40f\"}\n            case 3:\n                return {\"color\": \"#f1c40f\"}\n            case 4:\n                return {\"color\": \"#f39c12\"}\n            case 5:\n                return {\"color\": \"#d35400\"}\n            case 6:\n                return {\"color\": \"#d35400\"}\n            case 7:\n                return {\"color\": \"#e74c3c\"}\n            case 8:\n                return {\"color\": \"#e84118\"}\n            case 9:\n                return {\"color\": \"#c23616\"}\n            default:\n                return {\"color\": \"#2ecc71\"}\n        }\n    }\n\n\n    useEffect(() => {\n        calcRaceScore()\n    }, [])\n\n\n    return (\n        <div className=\"recommendation-div\">\n            <div className=\"pageComponent\">\n                <div className=\"scoreDiv\">\n                    <span className=\"score\" style={scoreColor()}>{props.results.race}</span>\n                    <p className=\"recommendationText\">{displayRecommendation()}</p>\n                </div>\n                <div>\n                    <button className=\"submitButton\" onClick={props.switchView}>Show Nearby Centers</button>\n                </div>\n            </div>\n        </div>\n\n    )\n}\n\nexport default Recommendations","import React, {useState, useEffect} from 'react'\nimport {withScriptjs, withGoogleMap, GoogleMap, Marker, DirectionsRenderer} from 'react-google-maps'\n\nconst Map = withScriptjs(withGoogleMap((props) => {\n\n  const setAsActive = hospital => {\n    props.getDirections(props.center, hospital.loc.coordinates)\n    props.setActive({active: true, hospital: hospital})\n  }\n\n  return (\n    <GoogleMap\n      defaultZoom={10}\n      defaultCenter={props.center}\n    >\n      <Marker position={props.center} />\n\n      {props.hospitals.map(hospital => {\n        return (\n          <Marker\n            key={hospital._id}\n            icon={{url: `http://maps.google.com/mapfiles/ms/icons/hospitals.png`}}\n            position={{lat: hospital.loc.coordinates[1], lng: hospital.loc.coordinates[0]}}\n            onClick={() => setAsActive(hospital)}\n          />\n        )\n      })\n    }\n\n      {props.directionsOn ? <DirectionsRenderer directions={props.directions} /> : null}\n    </GoogleMap>\n  )\n}))\n\nexport default Map\n","// takes api params, returns google api string\nimport * as env from '../env'\nexport const GoogleApi = function(opts) {\n    opts = opts || {\n        apiKey: env.apiKey,\n        libraries: ['Places', 'Geometry']\n    }\n  \n    const apiKey = opts.apiKey;\n    const libraries = opts.libraries || [];\n    const client = opts.client;\n    const URL = 'https://maps.googleapis.com/maps/api/js';\n  \n    const googleVersion = '3.38';\n    let script = null;\n    let google = window.google || null;\n    let loading = false;\n    let channel = null;\n    let language = null;\n    let region = null;\n  \n    let onLoadEvents = [];\n  \n    const url = () => {\n      let url = URL;\n      let params = {\n        key: apiKey,\n        callback: 'CALLBACK_NAME',\n        libraries: libraries.join(','),\n        client: client,\n        v: googleVersion,\n        channel: channel,\n        language: language,\n        region: region\n      }\n  \n      let paramStr = Object.keys(params)\n          .filter(k => !!params[k])\n          .map(k => `${k}=${params[k]}`).join('&');\n  \n      return `${url}?${paramStr}`;\n    }\n  \n    return url();\n  }\n  \n  export default GoogleApi","import React, { PropTypes as T } from 'react'\nimport ReactDOM from 'react-dom'\n\nimport cache from './ScriptCache'\nimport * as env from '../env'\nimport GoogleApi from './GoogleApi'\n\nconst defaultMapConfig = {}\nexport const wrapper = (options) => (WrappedComponent) => {\n  const apiKey = options.apiKey || env.apiKey\n  const libraries = options.libraries || ['Places', 'Geometry'];\n\n  class Wrapper extends React.Component {\n    constructor(props, context) {\n      super(props, context);\n\n      this.state = {\n        loaded: false,\n        map: null,\n        google: null\n      }\n    }\n\n    componentDidMount() {\n      const refs = this.refs;\n      this.scriptCache.google.onLoad((err, tag) => {\n        const maps = window.google.maps;\n        const props = Object.assign({}, this.props, {\n          loaded: this.state.loaded\n        });\n\n        const mapRef = refs.map;\n\n        const node = ReactDOM.findDOMNode(mapRef);\n        let center = new maps.LatLng(this.props.lat, this.props.lng)\n\n        let mapConfig = Object.assign({}, defaultMapConfig, {\n          center, zoom: this.props.zoom\n        })\n\n        this.map = new maps.Map(node, mapConfig);\n\n        this.setState({\n          loaded: true,\n          map: this.map,\n          google: window.google\n        })\n      });\n    }\n\n    componentWillMount() {\n      this.scriptCache = cache({\n        google: GoogleApi({\n          apiKey: apiKey,\n          libraries: libraries\n        })\n      });\n    }\n\n    render() {\n      const props = Object.assign({}, this.props, {\n        loaded: this.state.loaded,\n        map: this.state.map,\n        google: this.state.google,\n        mapComponent: this.refs.map\n      })\n    \n      return (\n        <div>\n          <WrappedComponent {...props} />\n          <div ref='map' />\n        </div>\n      )\n    }\n  }\n\n  return Wrapper;\n}\n\nexport default wrapper;","import React, {useState, useEffect} from 'react'\n\nexport const HospitalCard = (props) => {\n    const [hospital, setHospital] = useState({\n        ...props.hospital,\n        distance: \"\",\n        duration: \"\"\n    })\n\n    const getDistance = () => {\n\n        let directionsService = new props.google.maps.DirectionsService()\n    \n        directionsService.route({\n          origin: props.location,\n          destination: {lat: hospital.loc.coordinates[1], lng: hospital.loc.coordinates[0]},\n          travelMode: props.google.maps.TravelMode.DRIVING\n        },\n        (result, status) => {\n            if (status === props.google.maps.DirectionsStatus.OK) {\n                setHospital({\n                    ...hospital,\n                    distance: result.routes[0].legs[0].distance.text,\n                    duration: result.routes[0].legs[0].duration.text\n                })\n            } else {\n                console.error(status)\n            }\n        })\n    }\n\n    const setAsActive = hospital => {\n        props.getDirections(props.location, hospital.loc.coordinates)\n        props.setActive({active: true, hospital: hospital})\n    }\n\n    const renderAttributes = (hospital) => {\n        return (\n            <div className=\"attributesDiv\">\n                <div className=\"travelInfoDiv\">\n                    <span>{hospital.distance}</span>\n                    <span>{hospital.duration}</span>\n                </div>\n                <div className=\"certificationsDiv\">\n                    {hospital.CSC === \"TRUE\" ? <span className=\"attribute CSC\">Comprehensive Stroke Center</    span> : null}\n                    {hospital.EVMT === \"TRUE\" ? <span className=\"attribute EVMT\">Thrombectomy-Capable</span> : null}\n                    {hospital.PSC === \"TRUE\" && hospital.CSC === \"FALSE\" ? <span className=\"attribute   PSC\">Primary Stroke Center</span> : null}\n                    {hospital.TPA === \"TRUE\" ? <span className=\"attribute TPA\">tPA Available</span> : null}\n                </div>\n            </div>\n        )\n    }\n\n    // props.counter < 10 ? getDistance() : console.log(\"\")\n    if (hospital.distance === \"\") {\n        getDistance()\n     }\n\n    useEffect(() => {\n        \n    })\n\n    return (\n        <div key={hospital._id} className=\"hospitalDiv\" onClick={() => setAsActive(hospital)}>\n            <div className=\"infoDiv\">\n                <span className=\"hospitalName\">{hospital.name}</span>\n                <span className=\"hospitalAddress\">{hospital.address}</span>\n            </div>\n            {renderAttributes(hospital)}\n        </div>\n\n    )\n}","import React, {useState, useEffect} from 'react'\nimport Map from './map'\nimport GoogleApiComponent from '../../utils/GoogleApiComponent'\nimport GoogleApi from '../../utils/GoogleApiComponent'\nimport Scrollable from 'hide-scrollbar-react'\nimport {HospitalCard} from './hospitalCard'\nimport * as env from '../../env'\nimport axios from 'axios'\n\nconst MapView = (props) => {\n\n    const [location, setLocation] = useState({\n        lat: 0,\n        lng: 0,\n        ready: false,\n        hospitalsFetched: false\n    })\n\n    const [error, setError] = useState(\"\")\n    const [directions, setDirections] = useState({\n        active: false,\n        route: {}\n    })\n\n    const [activeHospital, setActiveHospital] = useState({\n        active: false,\n        hospital: {}\n    })\n\n    const [hospitals, setHospitals] = useState([])\n\n    const fetchHospitals = () => {\n        // something is fucked up between the query and the response\n        axios.get(`${env.serverUrl}/hospital?lat=${location.lat}&lng=${location.lng}`)\n        .then(response => {\n            let hospitals = response.data.hospitals\n\n            hospitals = sortHospitals(hospitals)\n            if (props.lvo) {\n                hospitals = hospitals.filter(hospital => hospital.CSC === \"TRUE\")\n            }\n            // hospitalCoords(hospitals)\n            setHospitals(hospitals)\n            setLocation({...location, hospitalsFetched: true})\n        })\n    }\n\n    const sortHospitals = (hospitals) => {\n        hospitals.sort((a, b) => {\n            let u = {\n                lat: location.lat * Math.PI / 180,\n                lng: location.lng * Math.PI / 180\n            }\n\n                a.lat = a.loc.coordinates[1] * Math.PI / 180\n                a.lng = a.loc.coordinates[0] * Math.PI / 180\n\n                b.lat = b.loc.coordinates[1] * Math.PI / 180\n                b.lng = b.loc.coordinates[0] * Math.PI / 180\n\n                let distA = Math.acos(Math.sin(u.lat) * Math.sin(a.lat) + Math.cos(u.lat) * Math.cos(a.lat) * Math.cos(a.lng - u.lng)) * 3958.76\n\n                let distB = Math.acos(Math.sin(u.lat) * Math.sin(b.lat) + Math.cos(u.lat) * Math.cos(b.lat) * Math.cos(b.lng - u.lng)) * 3958.76\n\n                return distA - distB\n        })\n\n        return hospitals\n    }\n    \n\n    // in case we add more hospitals to DB, takes array of hospitals with address field and patches entries in Mongo with lat/lng\n    // const hospitalCoords = async (list) => {\n    //     await asyncForEach(list, async (hospital) => {\n    //         let location = await fetchCoords(hospital.address)\n    //         let result = await axios.patch(`${env.serverUrl}/hospital`, {\n    //             hospitalId: hospital._id,\n    //             lat: location.lat,\n    //             lng: location.lng\n    //         })\n    //     })\n    // }\n\n    // const asyncForEach = async (array, callback) => {\n    //     for (let index = 0; index < array.length; index++) {\n    //       await callback(array[index], index, array);\n    //     }\n    //   }\n\n    // const fetchCoords = async (address) => {\n    //     let addressString = address.split(' ').join('+')\n    //     let response = await fetch(`https://maps.googleapis.com/maps/api/geocode/json?address=${addressString}&key=${env.apiKey}`)\n    //     let json = await response.json()\n    //     return json.results[0].geometry.location\n    // }\n\n    const grabLocation = () => {\n        if (navigator.geolocation) {\n            return new Promise((resolve, reject) => navigator.geolocation.getCurrentPosition(resolve, reject))\n        }\n    }\n\n    const processPosition = (position) => {\n        setLocation({\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n            ready: true,\n            hospitalsFetched: false\n        })\n    }\n\n    const getDirections = (origin, destination) => {\n        //destination object w/ lat: lng:\n            let directionsService = new props.google.maps.DirectionsService()\n    \n            directionsService.route({\n              origin: origin,\n              destination: {lat: destination[1], lng: destination[0]},\n              travelMode: props.google.maps.TravelMode.DRIVING\n            },\n            (result, status) => {\n              status === props.google.maps.DirectionsStatus.OK ? setDirections({active: true, route: result}) : setError(\"Error fetching directions\")\n            })\n    }\n\n\n    const renderMap = () => {\n        if (location.lat !== \"\" && location.lng !== \"\") {\n            return (\n                <div className=\"mapDiv\">\n                    <Map\n                        center={location}\n                        google={props.google}\n                        googleMapURL={toString(GoogleApi({}))}\n                        hospitals={hospitals}\n                        directionsOn={directions.active}\n                        directions={directions.route}\n                        getDirections={getDirections}\n                        setActive={setActiveHospital}\n                        loadingElement={<div className='loadingElement'style={{ height: `100%` }}>Map is Loading....</div>}\n                        containerElement={<div className='containerElement' />}\n                        mapElement={<div className='mapElement' />}\n                    />\n                </div>)\n        } else {\n            return <div className=\"mapDiv\">Loading.....</div>\n        }\n    }\n\n    const renderHospitals = () => {\n        // hospital list based on proximity and matched with lvo +/-\n        return (\n            <div className=\"outerHospitalsContainer\">\n                {activeHospital.active ? renderActiveHospital(activeHospital.hospital) : null}\n                <Scrollable>\n                <div className=\"hospitalsContainer\">\n                    {hospitals.map((hospital, i) => {\n                        return (\n                            <HospitalCard\n                                counter={i}\n                                google={props.google}\n                                hospital={hospital}\n                                key={hospital._id}\n                                location={location}\n                                getDirections={getDirections}\n                                setActive={setActiveHospital}\n                            />\n                        )\n                    })}\n                </div>\n                </Scrollable>\n            </div>\n        )\n    }\n\n    const openGoogle = (hospital) => {\n        let lat = hospital.loc.coordinates[1]\n        let lng = hospital.loc.coordinates[0]\n        window.open(`http://maps.google.com/maps?saddr=${location.lat},${location.lng}&daddr=${lat},${lng}`)\n    }\n\n    const renderActiveHospital = (hospital) => {\n        return (\n            <div key={hospital._id} className=\"hospitalDiv active\">\n                <div className=\"infoContainer\">\n                <div className=\"infoDiv\">\n                    <span className=\"hospitalName\">{hospital.name}</span>\n                    <span className=\"hospitalAddress\">{hospital.address}</span>\n                </div>\n                <div className=\"attributesDiv\">\n                    <div className=\"travelInfoDiv\">\n                        <span>{hospital.distance}</span>\n                        <span>{hospital.duration}</span>\n                    </div>\n                    <div className=\"certificationsDiv\">\n                        {hospital.CSC === \"TRUE\" ? <span className=\"attribute CSC\">Comprehensive Stroke Center</    span> : null}\n                        {hospital.EVMT === \"TRUE\" ? <span className=\"attribute EVMT\">Thrombectomy-Capable</span> : null}\n                        {hospital.PSC === \"TRUE\" && hospital.CSC === \"FALSE\" ? <span className=\"attribute   PSC\">Primary Stroke Center</span> : null}\n                        {hospital.TPA === \"TRUE\" ? <span className=\"attribute TPA\">tPA Available</span> : null}\n                    </div>\n                </div>\n                </div>\n                <button className=\"submitButton\" onClick={() => openGoogle(hospital)}><i className=\"fas fa-location-arrow\"></i></button>\n            </div>\n        )\n    }\n\n\n    const renderSendToHospital = () => {\n        if (activeHospital.active) {\n            if (props.patient.sent) {\n                return <a>Patient Info Sent <i className=\"fas fa-check\"></i></a>\n            }\n            return <a onClick={() => props.sendToHospital(activeHospital.hospital._id, hospitals, location)}>Send to Hospital <i className=\"fas fa-arrow-right\"></i></a>\n        }\n    }\n\n\n    if (location.ready && !location.hospitalsFetched) {\n        fetchHospitals()\n    }\n\n    useEffect(() => {\n\n        const locateUser = async () => {\n            let position = await grabLocation()\n            processPosition(position)\n        }\n        \n        locateUser()\n        // fetchHospitals()\n    }, [])\n\n    return (\n        <div className=\"pageComponent maps\">\n            <div className=\"recommendation-header\">\n                <a onClick={props.switchView}><i className=\"fas fa-arrow-left\"></i> Back to Recommendation</a>\n                {renderSendToHospital()}\n            </div>\n            <div className=\"mapAndHospitalsDiv\">\n                {location.lat !== 0 && props.google ? renderMap() : null}\n                {renderHospitals()}\n            </div>\n        </div>\n    )\n}\n\nexport default GoogleApiComponent({\n    apiKey: env.apiKey,\n    libraries: ['places', 'geometry']\n})(MapView)","import React, {useState, useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport '../css/results.css'\nimport Recommendations from './recommendation'\nimport MapView from './map/mapView'\nimport * as env from '../env'\nimport axios from 'axios';\n\nconst Results = (props) => {\n\n    const [component, setComponent] = useState('recommendations')\n\n    // const triage = {\n    //     tPA: {\n    //         ageInRange: true,\n    //         lastKnownWell: \"12:45:00\",\n    //         timeSinceLKW: 3.2,\n    //         recentSurgery: false,\n    //         pregnancy: false,\n    //         anticoagulants: false\n    //     },\n    //     race: {\n    //         facialPalsy: 1,\n    //         armMotorImpairment: 1,\n    //         legMotorImpairment: 2,\n    //         gazeDeviation: 2,\n    //         hemiparesis: true,\n    //         hemiparesisSide: 'left',\n    //         agnosia: 2,\n    //         aphasia: null\n    //     }\n    // }\n\n    // const results = {\n    //     race: 6,\n    //     lvo: true,\n    //     tpa: true\n    // }\n\n    const [error, setError] = useState(\"\")\n\n    const [patient, setPatient] = useState({\n        ready: false,\n        sent: false,\n        triage: {\n            tPA: props.location.state.tpa,\n            race: props.location.state.race\n        },\n        results: {},\n        rec: {}\n    })\n\n    const setResults = results => {\n        setPatient({\n            ...patient,\n            results: results\n        })\n    }\n\n    const sendToHospital = async (hospitalId, hospitals, location) => {\n\n        setPatient({\n            ...patient,\n            rec: {\n                userLocation: {\n                    lng: location.lng,\n                    lat: location.lat\n                },\n                hospitalId: hospitalId,\n                recHospitals: hospitals.map(hospital => hospital._id)\n            },\n            ready: true\n        })\n    }\n\n    const postPatient = async () => {\n        console.log(patient)\n        let response = await axios.post(`${env.serverUrl}/patient/ems`, {patient: patient})\n        if (response.data.success) {\n            setPatient({\n                ...patient,\n                sent: true\n            })\n        } else if (response.data.error) {\n            setError(response.data.error)\n        }\n    }\n\n\n    const renderComponent = () => {\n        switch(component) {\n            case 'recommendations':\n                return (\n                    <Recommendations\n                        triage={patient.triage}\n                        results={patient.results}\n                        setResults={setResults}\n                        switchView={() => setComponent('maps')} \n                    />\n                )\n            case 'maps':\n                return (\n                    <MapView\n                        lvo={patient.results.lvo}\n                        switchView={() => setComponent('recommendations')}\n                        sendToHospital={sendToHospital}\n                        patient={patient}\n                    />\n                )\n        }\n    }\n\n    if (patient.ready && !patient.sent) {\n        postPatient()\n    }\n\n    return (\n        <React.Fragment>\n            {renderComponent()}\n        </React.Fragment>\n    )\n}\n\nexport default connect()(Results)","const initialState = {\n    isAuth: false,\n    userId: \"\"\n}\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type) {\n        case 'SET_AUTH': \n            return {\n                ...state,\n                isAuth: action.payload.token ? true : false,\n                userId: action.payload.userId\n            }\n        case 'SET_USER':\n            return {\n                ...state,\n                userId: action.payload\n            }\n        default:\n            return state\n    }\n}\n\nexport default reducer","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\n\nexport default ComposedComponent => {\n    class Authenticate extends Component {\n        componentWillMount() {\n            if (!this.props.isAuth) {\n                this.props.history.push('/')\n            }\n        }\n\n        componentDidUpdate() {\n            if (!this.props.isAuth) {\n                this.props.history.push('/')\n            }\n        }\n\n        render() {\n            return (\n                <ComposedComponent {...this.props} />\n            )\n        }\n    }\n\n    const mapStateToProps = (state) => {\n        return {\n            isAuth: state.auth.isAuth\n        }\n    }\n\n    return connect(mapStateToProps)(Authenticate)\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\nimport {createStore, combineReducers} from 'redux'\nimport {Provider} from 'react-redux'\nimport './css/styles.css'\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './App'\nimport Login from './components/login'\nimport Assessment from './components/Assessment'\nimport Results from './components/results'\n\n\nimport authorizationReducer from './store/reducers/authReducer'\nimport Authenticate from './components/HOC/requireAuth'\nimport {setAuthenticationHeader} from './utils/authenticate'\n\n\n// import assessmentReducer from './store/reducers/assessment'\nconst rootReducer = combineReducers({\n    auth: authorizationReducer, \n    // assessReducer: assessmentReducer\n})\n\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\n\nlet token = localStorage.getItem('jsonwebtoken')\nsetAuthenticationHeader(token)\n\n\nReactDOM.render(\n    <BrowserRouter>\n    <Provider store={store}>\n        <App>\n            <Switch>\n                <Route exact path='/' component={Login} />\n                <Route path=\"/assessment\" component={Authenticate(Assessment)} />\n                <Route path='/results' component={Authenticate(Results)} />\n            </Switch>\n        </App>\n    </Provider>\n    </BrowserRouter>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}